[project]
name = "python-template"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.10"
dependencies = []

[tool.uv]
dev-dependencies = [
    "pre-commit>=3.8.0",
    "ruff>=0.6.5",
    "mypy>=1.11.2",
    "pytest>=8.3.3",
    "pytest-cov>=5.0.0",
]

[tool.ruff]
# Allow autofix for listed rules.
fix = true
show-fixes = true
target-version = "py310"
# Same as Black.
line-length = 88
output-format = "concise"


[tool.ruff.lint]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
select = ["ALL"]
fixable = ["ALL"]
unfixable = []
ignore = [
    "D100",   # Missing docstring in public module
    "TCH003", # place imports in type checking block
    "D104",   # Missing docstring in public package
]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Error output type
[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.lint.per-file-ignores]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "test.*"
warn_return_any = false
disable_error_code = ["import-untyped"]

[tool.pytest.ini_options]
# runs doctests in modules, when running pytest
addopts = ["--doctest-modules", "--cov-fail-under=85"]
markers = []

[tool.pytest_env]
# set dummy env variables so that tests can be run

# set this to the name of your profile in ~/.aws/credentials if you don't use default profile
# AWS_PROFILE

[tool.coverage.run]
command_line = "-m pytest --config-file=pyproject.toml --cov-reset -q --tb=short --disable-warnings"


[tool.coverage.report]
format = "markdown"
skip_covered = true
skip_empty = true
show_missing = true

[tool.coverage.html]
title = "Code Coverage Report"
